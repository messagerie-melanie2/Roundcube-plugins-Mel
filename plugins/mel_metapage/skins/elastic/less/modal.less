@import '../../../../../skins/mel_elastic/styles/less/main.less';

.modal-top-right-buttons-without-color()
{
    font-size: xx-large;
    cursor: pointer;
    transition: all 0.1s ease-in;
    background-color: var(--invisible);
    border-color: var(--invisible);
}
.modal-top-right-buttons()
{
    .modal-top-right-buttons-without-color();
    color: var(--main-text-color);
}

.modal-top-right-buttons-focus()
{
    box-shadow: none;
    text-shadow: 0px 0px .2rem var(--tierciary-bckg-color);
    color: var(--tierciary-text-color);
}

.modal-top-right-buttons-hover()
{
    text-shadow: 0px 0px 2px black;
    color: var(--secondary-text-color);
}

.modal-top-right-buttons-active()
{
    box-shadow: none!important;
    text-shadow: 0px 0px .2rem #c30000;
    color: #c30000!important;
    background-color: var(--invisible)!important;
    border-color: var(--invisible)!important;
}

.modal{

    #created-modal-title-div-auto {
        display: grid;
        

        h2{
            display: inline-block;
            text-align: center;
            margin-top: -5px;
        }

        a {
            display: inline-block;

            &.mel-return {
                font-size: 2rem;
                margin-left: 30px;
                margin-right: 15px;

                + h2{
                    margin-left: 0px;
                }
            }
        }
    }

    &-header{
        border: none;
        display: block;

        .modal-minify-mel,
        .modal-close{
            .modal-top-right-buttons();

            html.dark-mode &{
                background-color: var(--invisible)!important;
                border-color: var(--invisible)!important;
                color:#e2e8e9;
            }

            &:focus{
                .modal-top-right-buttons-focus();
            }

            &:hover{
                .modal-top-right-buttons-hover();

                html.dark-mode &{
                    color:#E1C58F;
                }
            }

            &:active{
                .modal-top-right-buttons-active();
            }
        }
    }

    &-content{
        border-radius: 15px;
        border:none;
    }

    &-title{
        margin-top: 30px;
        margin-left: 30px;
        white-space: break-spaces!important;
    }

    &-body{
        margin-left: 30px;
        margin-right: 30px;
    }

    &-footer{
        border: none;
    }

    &-top-right-actions{
        position: absolute;
        top: 0;
        right: 0;
    }
}

.fullscreen {
    &-close{
        .modal-top-right-buttons-without-color();

        position: absolute;
        top: 20px;
        right: 274px;
        font-size: xxx-large;
        color:var(--secondary-text-color);
    
        &:focus{
            .modal-top-right-buttons-focus();
        }
    
        &:hover{
            .modal-top-right-buttons-hover();
        }
    
        &:active{
            .modal-top-right-buttons-active();
        }
    }

    &-item{
        position: absolute;
        width: calc(100% - 60px);
        height: calc(100% - 60px);
        background-color: var(--ghost-div-background);
        top: 60px;
        max-height: calc(100% - 60px);
        overflow: auto;
        left: 60px;
        z-index: 9998;
    
        html@{touch} &{
            width: 100%;
            left: 0;
        }

        &-flex{
            display:flex;
        }
    }
}

.edited-modal-close{
    .modal-top-right-buttons();

    
    &:focus{
        .modal-top-right-buttons-focus();
    }

    &:hover{
        background-color: var(--invisible)!important;
        border-color: var(--invisible)!important;
        .modal-top-right-buttons-hover();
    }

    &:active{
        .modal-top-right-buttons-active();
    }
}

.mm-shortcuts
{
    margin: 0 auto;
    margin-top: 100px;
    display:flex;

    html@{touch} &{
        margin: 0;
        margin-top: 100px;
        width: 100%;
        flex-direction: column-reverse;

        > .square_div {
            margin-top:15px;
        }

    }

    html@{layout-phone} &,
    html@{layout-small} &{
        flex-direction: column;
    }
}

.tasks {
    &-mel_metapage{
        &.action-dialog-ui
        {
            .ui-dialog.ui-corner-all.ui-widget.ui-widget-content.ui-front.ui-dialog-buttons.ui-draggable.ui-resizable
            {
                top:0!important;
                left:0!important;
                border-radius: 0!important;
            }
        }
    }
}

.ui-datepicker {
    &:not(.ui-datepicker-inline){
        z-index: 1300!important;
    }
}

/** DIALOG **/
/***********/
/**This software or document includes material copied from or derived from [Modal Dialog Example - https://www.w3.org/WAI/ARIA/apg/example-index/dialog-modal/dialog]. Copyright © [YEAR] W3C® (MIT, ERCIM, Keio, Beihang).
/**********/
.hidden {
    display: none;
  }
  
//   [role="alertdialog"],
//   [role="dialog"] {
//     box-sizing: border-box;
//     padding: 15px;
//     border: 1px solid #000;
//     background-color: #fff;
//     min-height: 100vh;
//   }
  
//   @media screen and (min-width: 640px) {
//     [role="alertdialog"],
//     [role="dialog"] {
//       position: absolute;
//       top: 2rem;
//       left: 50vw; /* move to the middle of the screen (assumes relative parent is the body/viewport) */
//       transform: translateX(
//         -50%
//       ); /* move backwards 50% of this element's width */
  
//       min-width: calc(640px - (15px * 2)); /* == breakpoint - left+right margin */
//       min-height: auto;
//       box-shadow: 0 19px 38px rgb(0 0 0 / 12%), 0 15px 12px rgb(0 0 0 / 22%);
//     }
//   }
  
  .dialog_label {
    text-align: center;
  }
  
  .dialog_form {
    margin: 15px;
  }
  
  .dialog_form .label_text {
    box-sizing: border-box;
    padding-right: 0.5em;
    display: inline-block;
    font-size: 16px;
    font-weight: bold;
    width: 30%;
    text-align: right;
  }
  
  .dialog_form .label_info {
    box-sizing: border-box;
    padding-right: 0.5em;
    font-size: 12px;
    width: 30%;
    text-align: right;
    display: inline-block;
  }
  
  .dialog_form_item {
    margin: 10px 0;
    font-size: 0;
  }
  
  .dialog_form_item .wide_input {
    box-sizing: border-box;
    max-width: 70%;
    width: 27em;
  }
  
  .dialog_form_item .city_input {
    box-sizing: border-box;
    max-width: 70%;
    width: 17em;
  }
  
  .dialog_form_item .state_input {
    box-sizing: border-box;
    max-width: 70%;
    width: 15em;
  }
  
  .dialog_form_item .zip_input {
    box-sizing: border-box;
    max-width: 70%;
    width: 9em;
  }
  
  .dialog_form_actions {
    text-align: right;
    padding: 0 20px 20px;
  }
  
  .dialog_close_button {
    float: right;
    position: absolute;
    top: 10px;
    left: 92%;
    height: 25px;
  }
  
  .dialog_close_button img {
    border: 0;
  }
  
  .dialog_desc {
    padding: 10px 20px;
  }
  
  /* native <dialog> element uses the ::backdrop pseudo-element */
  
  /* dialog::backdrop, */
  .dialog-backdrop {
    // display: none;
    // position: fixed;
    // overflow-y: auto;
    // top: 60px;
    // right: 0;
    // bottom: 0;
    // left: 60px;
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
  }
  
  @media screen and (min-width: 640px) {
    .dialog-backdrop {
      background: rgb(0 0 0 / 30%);
    }
  }
  
  .dialog-backdrop.active {
    display: block;
  }
  
  .no-scroll {
    overflow-y: auto !important;
  }
  
  /* this is added to the body when a dialog is open */
  .has-dialog {
    overflow: hidden;
  }
  
  /* styling for alert-dialog example */
  .notes {
    display: block;
    font-size: 1rem;
    line-height: 1.3;
    min-width: 400px;
    max-width: 100%;
    width: 33%;
  }
  
  .visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: auto;
    margin: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
  }
  
  #notes_save {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  #notes_save svg {
    display: block;
    width: 0.75rem;
  }
  
  #notes_save .icon {
    display: none;
  }
  
  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
  
    100% {
      transform: rotate(360deg);
    }
  }
  
  #notes_save.loading .spinner {
    display: block;
    animation: rotate 2s linear infinite;
  }
  
  #notes_save.saved .check {
    display: block;
  }